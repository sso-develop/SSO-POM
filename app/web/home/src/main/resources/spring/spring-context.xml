<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.0.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- <context:property-placeholder ignore-unresolvable="true" location="classpath:properties/site.properties" 
		/> -->

	<mvc:annotation-driven />

	<!-- 
 	<bean id="frameworkConf" class="com.lambert.common.uitl.FrameworkPropertiesFactoryBean">
		<property name="locations" value="$[logback.conf.location]" />
		<property name="refreshInterval" value="$[log4j.conf.refreshInterval]" />
	</bean> 
	 -->
	 
	<bean id="systemConfig" class="com.lambert.core.model.model.SystemConfig">
		   <property name="ssoServerUrl" value ="$[sso.server.url]"/>
		   <property name="ssoAppCode" value ="$[sso.app.code]"/>
		   <property name="velocityFile" value="$[velocity.file.resource.loader.path]"/>
		   <property name="assetsServerHost" value="$[assetsServer_host]"/>
		   <property name="assetsServerPort" value="$[assetsServer_port]"/>
	</bean>
	 
	<bean id="clienFilterConfig" class="com.lambert.common.service.facade.filter.ClientFilterConfig" init-method="init">
		   <property name="ssoServerUrl" value ="$[sso.server.url]"/>
		   <property name="ssoAppCode" value ="$[sso.app.code]"/>
	</bean>
	 
	 	<!-- view -->
    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value ="/"/>   <!-- 配置velocity页面路径 -->
        <!-- 設置模板防止位置 -->
        <property name="velocityProperties">
		  <props>
		    <prop key="directive.foreach.counter.name">loopCounter</prop>
		    <prop key="directive.foreach.counter.initial.value">0</prop>
		    <prop key="input.encoding">UTF-8</prop><!-- 指定模板引擎进行模板处理的编码 -->
		    <prop key="output.encoding">UTF-8</prop><!-- 指定输出流的编码 -->
		    <prop key="resource.loader">$[velocityl.resource.loader]</prop>
		    <prop key="file.resource.loader.class">$[velocity.file.resource.loader.class]</prop>
		    <prop key="file.resource.loader.path">$[velocity.file.resource.loader.path]</prop>
		  <!--   <prop key="class.resource.loader.class">$[velocity.class.resource.loader.class]</prop>-->
		  </props>
		</property>
    </bean>
    
   <!--VelocityViewResolver视图配置-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
       <property name="suffix" value=".vm"/>
       <property name="prefix" value=""/>
      <property name="contentType" value="text/html;charset=UTF-8"/>
      <property name="exposeRequestAttributes" value="true"/>
      <property name="exposeSessionAttributes" value="true" /> <!--是否开放session属性-->  
   </bean>

	
	

	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<!-- <mvc:default-servlet-handler /> -->

	<!-- 静态资源映射 -->
	<mvc:resources mapping="/static/**" location="/static/"
		cache-period="31536000" />

	<!-- 定义无Controller的path<->view直接映射 -->
	<!-- <mvc:view-controller path="/" view-name="redirect:${web.view.index}"/> -->
	<!-- 拦截器配置，拦截顺序：先执行后定义的，排在第一位的最后执行。 -->
	<!-- <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.lambert.home.web.inteceptor.MyInteceptor" />
		</mvc:interceptor>
	</mvc:interceptors> -->
</beans>         